import { useSelector, useDispatch } from "react-redux";
import { Swiper, SwiperSlide } from "swiper/react";
import { Pagination } from "swiper/modules";

import Category from "./category/Category";

import { setPopupData } from "../../../../store/slices/popupsSlice";
import { countMemoryPercent } from "../../../../helpers/helpers";

import styles from "./categories.module.scss";
import "swiper/css";
import "swiper/css/pagination";

const Categories = () => {
  const dispatch = useDispatch();
  const { balance, maxBalance, memoryAll, memoryUse, categoriesData } =
    useSelector((state) => state.user);

  const showPopup = (popupEmoji, emojiBackground, name) => {
    if (balance >= maxBalance) {
      dispatch(
        setPopupData({
          isOpen: true,
          popupName: "warning",
          title: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
          text: "–í–∞—à –∫–æ—à–µ–ª–µ–∫ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤—ã–≤–æ–¥, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ",
          buttonText: "–í—ã–≤–æ–¥",
          openWithdrawPopup: true,
        })
      );
    } else if (countMemoryPercent(memoryAll, memoryUse) < 5) {
      dispatch(
        setPopupData({
          isOpen: true,
          popupName: "warning",
          title: "–í–Ω–∏–º–∞–Ω–∏–µ ‚ö†Ô∏è",
          text: "–í–∞—à–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—á—Ç–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ.",
          buttonText: "–ó–∞–∫—Ä—ã—Ç—å",
          buttonTextDark: true,
          linkText: "–£–≤–µ–ª–∏—á–∏—Ç—å",
        })
      );
    } else {
      dispatch(
        setPopupData({
          isOpen: true,
          popupName: "upload",
          popupEmoji: popupEmoji,
          title: "–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞",
          buttonText: "–ó–∞–∫—Ä—ã—Ç—å",
          emojiBackground: emojiBackground,
          categoryName: name,
        })
      );
    }
  };

  return (
    <section className={styles.categories__section}>
      <p className={styles.categories__title}>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ üî•</p>
      <div className={styles.categories__subinfo}>
        <p className={styles.categories__description}>
          –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        </p>
      </div>
      <section className={styles.categories}>
        <Swiper
          pagination={true}
          modules={[Pagination]}
          watchSlidesProgress
          slidesPerView={3.5}
          spaceBetween={-10}
        >
          {categoriesData.map((el, i) => (
            <SwiperSlide key={i}>
              <Category
                image={el?.image}
                name={el?.name}
                type={el?.type}
                typeBackground={el?.typeBackground}
                loaded={el?.loaded}
                onClick={() => showPopup(el?.image, el?.type, el?.name)}
              />
            </SwiperSlide>
          ))}
        </Swiper>
      </section>
    </section>
  );
};
export default Categories;
